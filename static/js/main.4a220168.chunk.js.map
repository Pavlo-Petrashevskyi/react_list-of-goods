{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","isVisible","deleteClass","button","classList","remove","addClasstoOthersButton","clickedButton","Array","from","document","querySelectorAll","filter","map","add","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverseArray","resetArray","this","newGoodsArray","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","e","currentTarget","good","Component","ReactDOM","render","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,KACnBC,WAAW,GAJf,EAOEC,YAAc,SAACC,GACbA,EAAOC,UAAUC,OAAO,aAR5B,EAWEC,uBAAyB,SAACC,GACxBC,MAAMC,KAAKC,SAASC,iBAAiB,WAClCC,QAAO,SAAAT,GAAM,OAAIA,IAAWI,KAC5BM,KAAI,SAAAV,GAAM,OAAIA,EAAOC,UAAUU,IAAI,gBAd1C,EAiBEC,eAAiB,WACf,EAAKC,SAAS,CACZjB,SAAUL,EAASuB,SACnBhB,WAAW,KApBjB,EAwBEiB,aAAe,WACb,EAAKF,SAAS,CACZjB,SAAUL,EAASyB,OACnBlB,WAAW,KA3BjB,EA+BEmB,aAAe,SAACjB,GAMd,OALA,EAAKa,UAAS,SAAAnB,GAAK,MAAK,CACtBC,YAAaD,EAAMC,WACnBG,WAAW,MAGN,EAAKJ,MAAMC,WACdK,EAAOC,UAAUU,IAAI,YACrBX,EAAOC,UAAUC,OAAO,aAvChC,EA0CEgB,WAAa,WACX,EAAKL,SAAS,CACZjB,SAAUL,EAASM,KACnBC,WAAW,IAGbO,MAAMC,KAAKC,SAASC,iBAAiB,WAClCE,KAAI,SAAAV,GAAM,OAAIA,EAAOC,UAAUU,IAAI,gBAjD1C,4CAoDE,WAAU,IAAD,OACCb,EAAcqB,KAAKzB,MAAnBI,UAEFsB,EA9FH,SACLC,EADK,GAGJ,IADCzB,EACF,EADEA,SAAUD,EACZ,EADYA,WAGN2B,EAAY,YAAOD,GAGzB,OAAQzB,GACN,KAAKL,EAASuB,SACZQ,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAE7B,MAEF,KAAKlC,EAASyB,OACZM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMG,OAASF,EAAME,UAYlC,OAJIhC,GACF2B,EAAaM,UAGRN,EAiEiBO,CAAkBrC,EAAiB2B,KAAKzB,OAE9D,OACE,sBAAKoC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,SAACC,GAIR,OAHA,EAAKlC,YAAYkC,EAAEC,eACnB,EAAK/B,uBAAuB8B,EAAEC,eAEvB,EAAKtB,kBAPhB,iCAaA,wBACEmB,KAAK,SACLD,UAAU,6BACVE,QAAS,SAACC,GAIR,OAHA,EAAKlC,YAAYkC,EAAEC,eACnB,EAAK/B,uBAAuB8B,EAAEC,eAEvB,EAAKnB,gBAPhB,4BAaA,wBACEgB,KAAK,SACLD,UAAU,6BACVE,QAAS,SAACC,GAGR,OAFA,EAAKlC,YAAYkC,EAAEC,eAEZ,EAAKjB,aAAagB,EAAEC,gBAN/B,qBAYCpC,GAEG,wBACEiC,KAAK,SACLD,UAAU,4BACVE,QAAS,SAACC,GAGR,OAFA,EAAKlC,YAAYkC,EAAEC,eAEZ,EAAKhB,cANhB,sBAcN,6BACE,6BACGE,EAAcV,KAAI,SAAAyB,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAvHrB,GAAyBC,aCjEzBC,IAASC,OACP,cAAC,EAAD,IACA/B,SAASgC,eAAe,W","file":"static/js/main.4a220168.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => {\n        return good1.localeCompare(good2);\n      });\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => {\n        return good1.length - good2.length;\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  isVisible: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    isVisible: false,\n  };\n\n  deleteClass = (button: HTMLElement) => {\n    button.classList.remove('is-light');\n  };\n\n  addClasstoOthersButton = (clickedButton: HTMLElement) => {\n    Array.from(document.querySelectorAll('button'))\n      .filter(button => button !== clickedButton)\n      .map(button => button.classList.add('is-light'));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n      isVisible: true,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n      isVisible: true,\n    });\n  };\n\n  reverseArray = (button: HTMLElement) => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      isVisible: true,\n    }));\n\n    return this.state.isReversed\n      ? button.classList.add('is-light')\n      : button.classList.remove('is-light');\n  };\n\n  resetArray = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isVisible: false,\n    });\n\n    Array.from(document.querySelectorAll('button'))\n      .map(button => button.classList.add('is-light'));\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    const newGoodsArray = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={(e) => {\n              this.deleteClass(e.currentTarget);\n              this.addClasstoOthersButton(e.currentTarget);\n\n              return this.sortByAlphabet();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={(e) => {\n              this.deleteClass(e.currentTarget);\n              this.addClasstoOthersButton(e.currentTarget);\n\n              return this.sortByLength();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={(e) => {\n              this.deleteClass(e.currentTarget);\n\n              return this.reverseArray(e.currentTarget);\n            }}\n          >\n            Reverse\n          </button>\n\n          {isVisible\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={(e) => {\n                  this.deleteClass(e.currentTarget);\n\n                  return this.resetArray();\n                }}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {newGoodsArray.map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}